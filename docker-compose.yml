version: '3.0'
services:
  core:
    container_name: core
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - backend
    volumes:
      - ./src:/usr/src/app/src
      - ./fixtures:/usr/src/app/fixtures
      - ./benchmarks:/usr/src/app/benchmarks
      - ./integrations:/usr/src/app/integrations
    ports:
      - '${PORT:-8000}:${PORT:-8000}'
    environment:
      - MONGO_DB_URL=${MONGO_DB_URL:-mongodb://mongo:27017/?compressors=zlib&gssapiServiceName=mongodb}
      - DEV=true
  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - backend
    volumes:
      - redis-data:/data

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch
    command: ./meilisearch --master-key=${MEILISEARCH_DB_API_KEY:-masterKey} --no-analytics=true
    networks:
      - backend
    volumes:
      - meilisearch-data:/data

  mongo:
    container_name: mongo
    networks:
      - backend
    image: mongo
    restart: always
    ports:
      - '${MONGO_DB_PORT:-27017}:${MONGO_DB_PORT:-27017}'
    volumes:
      - mongodb:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME:-taco-rocket}
      # - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME:-root}
      # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD:-example}

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - backend
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_DB_USERNAME:-root}
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_DB_PASSWORD:-example}
    depends_on:
      - mongo

networks:
  backend:

volumes:
  mongodb:
  redis-data:
  meilisearch-data:
